// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Workspace {
  id                Int            @id @default(autoincrement())
  ownerId           String
  name              String
  description       String?
  globalSharingType PermissionType @default(no)
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @default(now()) @updatedAt
  permissions       Permission[]   @relation("WorkspacePermissions")
  recentlyOpen      RecentWorkspace[] @relation("RecentlyOpen")
}

model Permission {
  id             Int            @id @default(autoincrement())
  workspace      Workspace      @relation("WorkspacePermissions", fields: [workspaceId], references: [id], onDelete: Cascade)
  workspaceId    Int
  userId         String
  permissionType PermissionType
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @default(now()) @updatedAt

  @@unique([workspaceId, userId])
}

model RecentWorkspace {
  id         Int      @id @default(autoincrement())
  workspace  Workspace @relation("RecentlyOpen", fields: [workspaceId], references: [id], onDelete: Cascade)
  workspaceId Int
  userId     String
  latestView DateTime @default(now())

  @@unique([workspaceId, userId])
}

enum PermissionType {
  no
  viewer
  editor
}
